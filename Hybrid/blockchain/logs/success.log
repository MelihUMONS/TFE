ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ sudo ./network.sh up
[sudo] Mot de passe de ruzgarkartali : 
Désolé, essayez de nouveau.
[sudo] Mot de passe de ruzgarkartali : 
Starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb' 

Unable to find image 'hyperledger/fabric-tools:latest' locally
latest: Pulling from hyperledger/fabric-tools
d4c3c94e5e10: Pulling fs layer
4cee5ca7b3cf: Pulling fs layer
e3bb73c69932: Pulling fs layer
5cdccc6d92e4: Pulling fs layer
62180af3a49d: Pulling fs layer
22d3ae2335e3: Pulling fs layer
22d3ae2335e3: Waiting
5cdccc6d92e4: Waiting
62180af3a49d: Waiting
d4c3c94e5e10: Verifying Checksum
d4c3c94e5e10: Download complete
d4c3c94e5e10: Pull complete
5cdccc6d92e4: Download complete
62180af3a49d: Download complete
4cee5ca7b3cf: Verifying Checksum
4cee5ca7b3cf: Download complete
4cee5ca7b3cf: Pull complete
e3bb73c69932: Verifying Checksum
e3bb73c69932: Download complete
e3bb73c69932: Pull complete
5cdccc6d92e4: Pull complete
62180af3a49d: Pull complete
22d3ae2335e3: Verifying Checksum
22d3ae2335e3: Download complete
22d3ae2335e3: Pull complete
Digest: sha256:97dd6b8d2ccd9a7e3f2d1ff688a96c9cbbc4dbe780679f6cd4db52dd68ffab9d
Status: Downloaded newer image for hyperledger/fabric-tools:latest
LOCAL_VERSION=2.0.1
DOCKER_IMAGE_VERSION=v2.5.8
=================== WARNING ===================
  Local fabric binaries and docker images are  
  out of  sync. This may cause problems.       
===============================================
Creating network "net_test" with the default driver
Creating volume "net_peer0.org1.example.com" with default driver
Creating volume "net_peer0.org2.example.com" with default driver
Creating volume "net_orderer.example.com" with default driver
Pulling peer0.org1.example.com (hyperledger/fabric-peer:latest)...
latest: Pulling from hyperledger/fabric-peer
d4c3c94e5e10: Already exists
c4c734e61b79: Pull complete
d363dc5e15f2: Pull complete
c495b7f29597: Pull complete
012cd649a3a7: Pull complete
328703b02642: Pull complete
Digest: sha256:e052883d4975d09dbc727c11b522f815a0ad887650c49e87922f240bfb5ab00b
Status: Downloaded newer image for hyperledger/fabric-peer:latest
Pulling orderer.example.com (hyperledger/fabric-orderer:latest)...
latest: Pulling from hyperledger/fabric-orderer
d4c3c94e5e10: Already exists
ff65791d72e0: Pull complete
68a193b20ce6: Pull complete
bf05935bf291: Pull complete
1ef445a60d2f: Pull complete
518bbd8947fa: Pull complete
Digest: sha256:23569f8e2f01fc6fba8d1875ade7dff0a4980ff675963289559f45d10fd05533
Status: Downloaded newer image for hyperledger/fabric-orderer:latest
Creating peer0.org2.example.com
Creating peer0.org1.example.com
Creating orderer.example.com
CONTAINER ID        IMAGE                               COMMAND             CREATED             STATUS                  PORTS                              NAMES
8cabe9076ec9        hyperledger/fabric-peer:latest      "peer node start"   3 seconds ago       Up Less than a second   0.0.0.0:7051->7051/tcp             peer0.org1.example.com
ddd7564cce32        hyperledger/fabric-orderer:latest   "orderer"           3 seconds ago       Up 2 seconds            0.0.0.0:7050->7050/tcp             orderer.example.com
f78e85ddcac7        hyperledger/fabric-peer:latest      "peer node start"   3 seconds ago       Up 1 second             7051/tcp, 0.0.0.0:9051->9051/tcp   peer0.org2.example.com
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ ./network.sh createChannel
Creating channel 'mychannel'.

If network is not up, starting nodes with CLI timeout of '5' tries and CLI delay of '3' seconds and using database 'leveldb 

### Generating channel configuration transaction 'mychannel.tx' ###
+ configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/mychannel.tx -channelID mychannel
2024-05-21 18:34:29.475 CEST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2024-05-21 18:34:29.490 CEST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/configtx/configtx.yaml
2024-05-21 18:34:29.490 CEST [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003 Generating new channel configtx
2024-05-21 18:34:29.492 CEST [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004 Writing new channel tx
+ res=0
+ set +x

### Generating channel configuration transaction 'mychannel.tx' ###
#######    Generating anchor peer update for Org1MSP  ##########
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID mychannel -asOrg Org1MSP
2024-05-21 18:34:29.516 CEST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2024-05-21 18:34:29.531 CEST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/configtx/configtx.yaml
2024-05-21 18:34:29.531 CEST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update
2024-05-21 18:34:29.533 CEST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update
+ res=0
+ set +x

#######    Generating anchor peer update for Org2MSP  ##########
+ configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID mychannel -asOrg Org2MSP
2024-05-21 18:34:29.561 CEST [common.tools.configtxgen] main -> INFO 001 Loading configuration
2024-05-21 18:34:29.579 CEST [common.tools.configtxgen.localconfig] Load -> INFO 002 Loaded configuration: /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/configtx/configtx.yaml
2024-05-21 18:34:29.579 CEST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Generating anchor peer update
2024-05-21 18:34:29.580 CEST [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004 Writing anchor peer update
+ res=0
+ set +x

Creating channel mychannel
Using organization 1
+ peer channel create -o localhost:7050 -c mychannel --ordererTLSHostnameOverride orderer.example.com -f ./channel-artifacts/mychannel.tx --outputBlock ./channel-artifacts/mychannel.block --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=0
+ set +x
2024-05-21 18:34:32.648 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2024-05-21 18:34:32.661 CEST [cli.common] readBlock -> INFO 002 Expect block, but got status: &{NOT_FOUND}
2024-05-21 18:34:32.663 CEST [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
2024-05-21 18:34:32.866 CEST [cli.common] readBlock -> INFO 004 Expect block, but got status: &{SERVICE_UNAVAILABLE}
2024-05-21 18:34:32.873 CEST [channelCmd] InitCmdFactory -> INFO 005 Endorser and orderer connections initialized
2024-05-21 18:34:33.076 CEST [cli.common] readBlock -> INFO 006 Expect block, but got status: &{SERVICE_UNAVAILABLE}
2024-05-21 18:34:33.082 CEST [channelCmd] InitCmdFactory -> INFO 007 Endorser and orderer connections initialized
2024-05-21 18:34:33.285 CEST [cli.common] readBlock -> INFO 008 Expect block, but got status: &{SERVICE_UNAVAILABLE}
2024-05-21 18:34:33.291 CEST [channelCmd] InitCmdFactory -> INFO 009 Endorser and orderer connections initialized
2024-05-21 18:34:33.493 CEST [cli.common] readBlock -> INFO 00a Expect block, but got status: &{SERVICE_UNAVAILABLE}
2024-05-21 18:34:33.500 CEST [channelCmd] InitCmdFactory -> INFO 00b Endorser and orderer connections initialized
2024-05-21 18:34:33.702 CEST [cli.common] readBlock -> INFO 00c Expect block, but got status: &{SERVICE_UNAVAILABLE}
2024-05-21 18:34:33.710 CEST [channelCmd] InitCmdFactory -> INFO 00d Endorser and orderer connections initialized
2024-05-21 18:34:33.918 CEST [cli.common] readBlock -> INFO 00e Received block: 0

===================== Channel 'mychannel' created ===================== 

Join Org1 peers to the channel...
Using organization 1
+ peer channel join -b ./channel-artifacts/mychannel.block
+ res=0
+ set +x
2024-05-21 18:34:36.976 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2024-05-21 18:34:37.001 CEST [channelCmd] executeJoin -> INFO 002 Successfully submitted proposal to join channel

Join Org2 peers to the channel...
Using organization 2
+ peer channel join -b ./channel-artifacts/mychannel.block
+ res=0
+ set +x
2024-05-21 18:34:40.053 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2024-05-21 18:34:40.092 CEST [channelCmd] executeJoin -> INFO 002 Successfully submitted proposal to join channel

Updating anchor peers for org1...
Using organization 1
+ peer channel update -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com -c mychannel -f ./channel-artifacts/Org1MSPanchors.tx --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=0
+ set +x
2024-05-21 18:34:43.155 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2024-05-21 18:34:43.165 CEST [channelCmd] update -> INFO 002 Successfully submitted channel update
===================== Anchor peers updated for org 'Org1MSP' on channel 'mychannel' ===================== 

Updating anchor peers for org2...
Using organization 2
+ peer channel update -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com -c mychannel -f ./channel-artifacts/Org2MSPanchors.tx --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
+ res=0
+ set +x
2024-05-21 18:34:49.231 CEST [channelCmd] InitCmdFactory -> INFO 001 Endorser and orderer connections initialized
2024-05-21 18:34:49.241 CEST [channelCmd] update -> INFO 002 Successfully submitted channel update
===================== Anchor peers updated for org 'Org2MSP' on channel 'mychannel' ===================== 


========= Channel successfully joined =========== 

ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ ./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-go -ccl go

Unknown flag: -ccn

Usage: 
  network.sh <Mode> [Flags]
    <Mode>
      - 'up' - bring up fabric orderer and peer nodes. No channel is created
      - 'up createChannel' - bring up fabric network with one channel
      - 'createChannel' - create and join a channel after the network is created
      - 'deployCC' - deploy the fabcar chaincode on the channel
      - 'down' - clear the network with docker-compose down
      - 'restart' - restart the network

    Flags:
    -ca <use CAs> -  create Certificate Authorities to generate the crypto material
    -c <channel name> - channel name to use (defaults to "mychannel")
    -s <dbtype> - the database backend to use: goleveldb (default) or couchdb
    -r <max retry> - CLI times out after certain number of attempts (defaults to 5)
    -d <delay> - delay duration in seconds (defaults to 3)
    -l <language> - the programming language of the chaincode to deploy: go (default), java, javascript, typescript
    -v <version>  - chaincode version. Must be a round number, 1, 2, 3, etc
    -i <imagetag> - the tag to be used to launch the network (defaults to "latest")
    -verbose - verbose mode
  network.sh -h (print this message)

 Possible Mode and flags
  network.sh up -ca -c -r -d -s -i -verbose
  network.sh up createChannel -ca -c -r -d -s -i -verbose
  network.sh createChannel -c -r -d -verbose
  network.sh deployCC -l -v -r -d -verbose

 Taking all defaults:
	network.sh up

 Examples:
  network.sh up createChannel -ca -c mychannel -s couchdb -i 2.0.0
  network.sh createChannel -c channelName
  network.sh deployCC -l javascript
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ ./network.sh deployCC
deploying chaincode on channel 'mychannel'

Vendoring Go dependencies ...
~/Documents/TFE/fabric-samples/chaincode/fabcar/go ~/Documents/TFE/fabric-samples/test-network
go: downloading github.com/hyperledger/fabric-contract-api-go v1.0.0
go: extracting github.com/hyperledger/fabric-contract-api-go v1.0.0
go: downloading github.com/hyperledger/fabric-chaincode-go v0.0.0-20200128192331-2d899240a7ed
go: downloading github.com/hyperledger/fabric-protos-go v0.0.0-20200124220212-e9cfc186ba7b
go: downloading github.com/xeipuuv/gojsonschema v1.2.0
go: downloading github.com/go-openapi/spec v0.19.4
go: downloading github.com/gobuffalo/packr v1.30.1
go: extracting github.com/gobuffalo/packr v1.30.1
go: downloading github.com/gobuffalo/packd v0.3.0
go: downloading github.com/gobuffalo/envy v1.7.0
go: extracting github.com/xeipuuv/gojsonschema v1.2.0
go: downloading github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415
go: extracting github.com/gobuffalo/packd v0.3.0
go: extracting github.com/gobuffalo/envy v1.7.0
go: downloading github.com/joho/godotenv v1.3.0
go: downloading github.com/rogpeppe/go-internal v1.3.0
go: extracting github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415
go: downloading github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f
go: extracting github.com/go-openapi/spec v0.19.4
go: downloading github.com/go-openapi/jsonreference v0.19.2
go: downloading github.com/go-openapi/swag v0.19.5
go: downloading github.com/go-openapi/jsonpointer v0.19.3
go: extracting github.com/joho/godotenv v1.3.0
go: extracting github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f
go: extracting github.com/rogpeppe/go-internal v1.3.0
go: extracting github.com/go-openapi/jsonreference v0.19.2
go: extracting github.com/go-openapi/jsonpointer v0.19.3
go: downloading github.com/PuerkitoBio/purell v1.1.1
go: extracting github.com/go-openapi/swag v0.19.5
go: downloading github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e
go: downloading gopkg.in/yaml.v2 v2.2.2
go: extracting github.com/PuerkitoBio/purell v1.1.1
go: downloading golang.org/x/text v0.3.2
go: downloading golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297
go: downloading github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578
go: extracting gopkg.in/yaml.v2 v2.2.2
go: extracting github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e
go: extracting github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578
go: extracting github.com/hyperledger/fabric-chaincode-go v0.0.0-20200128192331-2d899240a7ed
go: extracting github.com/hyperledger/fabric-protos-go v0.0.0-20200124220212-e9cfc186ba7b
go: downloading github.com/golang/protobuf v1.3.2
go: downloading google.golang.org/grpc v1.23.0
go: extracting golang.org/x/net v0.0.0-20190827160401-ba9fcec4b297
go: extracting github.com/golang/protobuf v1.3.2
go: extracting google.golang.org/grpc v1.23.0
go: downloading google.golang.org/genproto v0.0.0-20180831171423-11092d34479b
go: downloading golang.org/x/sys v0.0.0-20190710143415-6ec70d6a5542
go: extracting golang.org/x/text v0.3.2
go: extracting google.golang.org/genproto v0.0.0-20180831171423-11092d34479b
go: extracting golang.org/x/sys v0.0.0-20190710143415-6ec70d6a5542
~/Documents/TFE/fabric-samples/test-network
Finished vendoring Go dependencies
Using organization 1
++ peer lifecycle chaincode package fabcar.tar.gz --path ../chaincode/fabcar/go/ --lang golang --label fabcar_1
++ res=0
++ set +x
===================== Chaincode is packaged on peer0.org1 ===================== 

Installing chaincode on peer0.org1...
Using organization 1
++ peer lifecycle chaincode install fabcar.tar.gz
++ res=0
++ set +x
2024-05-21 18:37:04.153 CEST [cli.lifecycle.chaincode] submitInstallProposal -> INFO 001 Installed remotely: response:<status:200 payload:"\nIfabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2\022\010fabcar_1" > 
2024-05-21 18:37:04.153 CEST [cli.lifecycle.chaincode] submitInstallProposal -> INFO 002 Chaincode code package identifier: fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2
===================== Chaincode is installed on peer0.org1 ===================== 

Install chaincode on peer0.org2...
Using organization 2
++ peer lifecycle chaincode install fabcar.tar.gz
++ res=0
++ set +x
2024-05-21 18:37:25.683 CEST [cli.lifecycle.chaincode] submitInstallProposal -> INFO 001 Installed remotely: response:<status:200 payload:"\nIfabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2\022\010fabcar_1" > 
2024-05-21 18:37:25.683 CEST [cli.lifecycle.chaincode] submitInstallProposal -> INFO 002 Chaincode code package identifier: fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2
===================== Chaincode is installed on peer0.org2 ===================== 

Using organization 1
++ peer lifecycle chaincode queryinstalled
++ res=0
++ set +x
Installed chaincodes on peer:
Package ID: fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2, Label: fabcar_1
PackageID is fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2
===================== Query installed successful on peer0.org1 on channel ===================== 

Using organization 1
++ peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --channelID mychannel --name fabcar --version 1 --init-required --package-id fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2 --sequence 1
++ set +x
2024-05-21 18:37:27.827 CEST [chaincodeCmd] ClientWait -> INFO 001 txid [9892927022552404a10ce7c34046c2c3f93e0171352c1e572e2aa839c8fc3868] committed with status (VALID) at 
===================== Chaincode definition approved on peer0.org1 on channel 'mychannel' ===================== 

Using organization 1
===================== Checking the commit readiness of the chaincode definition on peer0.org1 on channel 'mychannel'... ===================== 
Attempting to check the commit readiness of the chaincode definition on peer0.org1 secs
++ peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version 1 --sequence 1 --output json --init-required
++ res=0
++ set +x
{
	"approvals": {
		"Org1MSP": true,
		"Org2MSP": false
	}
}
===================== Checking the commit readiness of the chaincode definition successful on peer0.org1 on channel 'mychannel' ===================== 
Using organization 2
===================== Checking the commit readiness of the chaincode definition on peer0.org2 on channel 'mychannel'... ===================== 
Attempting to check the commit readiness of the chaincode definition on peer0.org2 secs
++ peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version 1 --sequence 1 --output json --init-required
++ res=0
++ set +x
{
	"approvals": {
		"Org1MSP": true,
		"Org2MSP": false
	}
}
===================== Checking the commit readiness of the chaincode definition successful on peer0.org2 on channel 'mychannel' ===================== 
Using organization 2
++ peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --channelID mychannel --name fabcar --version 1 --init-required --package-id fabcar_1:963705a17ac31387c3c8eb1a76c41a8cc4e1d3376f72603106789ed7c8f372a2 --sequence 1
++ set +x
2024-05-21 18:37:36.056 CEST [chaincodeCmd] ClientWait -> INFO 001 txid [bbd76b5aa4f8532799519181dffe8b746f81b2f5540c0f05aabad3a5e5e4acfe] committed with status (VALID) at 
===================== Chaincode definition approved on peer0.org2 on channel 'mychannel' ===================== 

Using organization 1
===================== Checking the commit readiness of the chaincode definition on peer0.org1 on channel 'mychannel'... ===================== 
Attempting to check the commit readiness of the chaincode definition on peer0.org1 secs
++ peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version 1 --sequence 1 --output json --init-required
++ res=0
++ set +x
{
	"approvals": {
		"Org1MSP": true,
		"Org2MSP": true
	}
}
===================== Checking the commit readiness of the chaincode definition successful on peer0.org1 on channel 'mychannel' ===================== 
Using organization 2
===================== Checking the commit readiness of the chaincode definition on peer0.org2 on channel 'mychannel'... ===================== 
Attempting to check the commit readiness of the chaincode definition on peer0.org2 secs
++ peer lifecycle chaincode checkcommitreadiness --channelID mychannel --name fabcar --version 1 --sequence 1 --output json --init-required
++ res=0
++ set +x
{
	"approvals": {
		"Org1MSP": true,
		"Org2MSP": true
	}
}
===================== Checking the commit readiness of the chaincode definition successful on peer0.org2 on channel 'mychannel' ===================== 
Using organization 1
Using organization 2
++ peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --channelID mychannel --name fabcar --peerAddresses localhost:7051 --tlsRootCertFiles /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --version 1 --sequence 1 --init-required
++ res=0
++ set +x
2024-05-21 18:37:44.415 CEST [chaincodeCmd] ClientWait -> INFO 001 txid [22db330a132bdbf02bdd7954352c8899fcf4f3c4108f6869b231145333f50185] committed with status (VALID) at localhost:9051
2024-05-21 18:37:44.422 CEST [chaincodeCmd] ClientWait -> INFO 002 txid [22db330a132bdbf02bdd7954352c8899fcf4f3c4108f6869b231145333f50185] committed with status (VALID) at localhost:7051
===================== Chaincode definition committed on channel 'mychannel' ===================== 

Using organization 1
===================== Querying chaincode definition on peer0.org1 on channel 'mychannel'... ===================== 
Attempting to Query committed status on peer0.org1, Retry after 3 seconds.
++ peer lifecycle chaincode querycommitted --channelID mychannel --name fabcar
++ res=0
++ set +x

Committed chaincode definition for chaincode 'fabcar' on channel 'mychannel':
Version: 1, Sequence: 1, Endorsement Plugin: escc, Validation Plugin: vscc, Approvals: [Org1MSP: true, Org2MSP: true]
===================== Query chaincode definition successful on peer0.org1 on channel 'mychannel' ===================== 

Using organization 2
===================== Querying chaincode definition on peer0.org2 on channel 'mychannel'... ===================== 
Attempting to Query committed status on peer0.org2, Retry after 3 seconds.
++ peer lifecycle chaincode querycommitted --channelID mychannel --name fabcar
++ res=0
++ set +x

Committed chaincode definition for chaincode 'fabcar' on channel 'mychannel':
Version: 1, Sequence: 1, Endorsement Plugin: escc, Validation Plugin: vscc, Approvals: [Org1MSP: true, Org2MSP: true]
===================== Query chaincode definition successful on peer0.org2 on channel 'mychannel' ===================== 

Using organization 1
Using organization 2
++ peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n fabcar --peerAddresses localhost:7051 --tlsRootCertFiles /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /home/ruzgarkartali/Documents/TFE/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --isInit -c '{"function":"initLedger","Args":[]}'
++ res=0
++ set +x
2024-05-21 18:37:50.643 CEST [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 001 Chaincode invoke successful. result: status:200 
===================== Invoke transaction successful on peer0.org1 peer0.org2 on channel 'mychannel' ===================== 

Querying chaincode on peer0.org1...
Using organization 1
===================== Querying on peer0.org1 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org1 ...1716309483 secs
++ peer chaincode query -C mychannel -n fabcar -c '{"Args":["queryAllCars"]}'
++ res=0
++ set +x

[{"Key":"CAR0","Record":{"make":"Toyota","model":"Prius","colour":"blue","owner":"Tomoko"}},{"Key":"CAR1","Record":{"make":"Ford","model":"Mustang","colour":"red","owner":"Brad"}},{"Key":"CAR2","Record":{"make":"Hyundai","model":"Tucson","colour":"green","owner":"Jin Soo"}},{"Key":"CAR3","Record":{"make":"Volkswagen","model":"Passat","colour":"yellow","owner":"Max"}},{"Key":"CAR4","Record":{"make":"Tesla","model":"S","colour":"black","owner":"Adriana"}},{"Key":"CAR5","Record":{"make":"Peugeot","model":"205","colour":"purple","owner":"Michel"}},{"Key":"CAR6","Record":{"make":"Chery","model":"S22L","colour":"white","owner":"Aarav"}},{"Key":"CAR7","Record":{"make":"Fiat","model":"Punto","colour":"violet","owner":"Pari"}},{"Key":"CAR8","Record":{"make":"Tata","model":"Nano","colour":"indigo","owner":"Valeria"}},{"Key":"CAR9","Record":{"make":"Holden","model":"Barina","colour":"brown","owner":"Shotaro"}}]
===================== Query successful on peer0.org1 on channel 'mychannel' ===================== 

ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InitLedger","Args":[]}'
La commande « peer » est introuvable, vouliez-vous dire :
 La commande « pee » du paquet « moreutils » (universe)
 La commande « peet » du paquet « pipexec » (universe)
 La commande « pear » du paquet « php-pear » (main)
 La commande « beer » du paquet « gerstensaft » (universe)
peer : commande introuvable
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ ../bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InitLedger","Args":[]}'
2024-05-21 18:39:19.773 CEST [main] InitCmd -> ERRO 001 Fatal error when initializing core config : Could not find config file. Please make sure that FABRIC_CFG_PATH is set to a path which contains core.yaml
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export PATH=${PWD}/../bin:$PATH
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export FABRIC_CFG_PATH=$PWD/../config/
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ 
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export CORE_PEER_TLS_ENABLED=true
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export CORE_PEER_LOCALMSPID=Org1MSP
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ export CORE_PEER_ADDRESS=localhost:7051
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InitLedger","Args":[]}'
Error: endorsement failure during invoke. response: status:500 message:"make sure the chaincode basic has been successfully defined on channel mychannel and try again: chaincode basic not found" 
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n fabcar --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InitLedger","Args":[]}'
2024-05-21 18:40:35.152 CEST [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 001 Chaincode invoke successful. result: status:200 
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode query -C mychannel -n basic -c '{"Args":["GetAllAssets"]}'
Error: endorsement failure during query. response: status:500 message:"make sure the chaincode basic has been successfully defined on channel mychannel and try again: chaincode basic not found" 
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode query -C mychannel -n fabcar -c '{"Args":["GetAllAssets"]}'
Error: endorsement failure during query. response: status:500 message:"Function GetAllAssets not found in contract SmartContract" 
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-network$ peer chaincode query -C mychannel -n fabcar -c '{"Args":["QueryAllCars"]}'
[{"Key":"CAR0","Record":{"make":"Toyota","model":"Prius","colour":"blue","owner":"Tomoko"}},{"Key":"CAR1","Record":{"make":"Ford","model":"Mustang","colour":"red","owner":"Brad"}},{"Key":"CAR2","Record":{"make":"Hyundai","model":"Tucson","colour":"green","owner":"Jin Soo"}},{"Key":"CAR3","Record":{"make":"Volkswagen","model":"Passat","colour":"yellow","owner":"Max"}},{"Key":"CAR4","Record":{"make":"Tesla","model":"S","colour":"black","owner":"Adriana"}},{"Key":"CAR5","Record":{"make":"Peugeot","model":"205","colour":"purple","owner":"Michel"}},{"Key":"CAR6","Record":{"make":"Chery","model":"S22L","colour":"white","owner":"Aarav"}},{"Key":"CAR7","Record":{"make":"Fiat","model":"Punto","colour":"violet","owner":"Pari"}},{"Key":"CAR8","Record":{"make":"Tata","model":"Nano","colour":"indigo","owner":"Valeria"}},{"Key":"CAR9","Record":{"make":"Holden","model":"Barina","colour":"brown","owner":"Shotaro"}}]
ruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-networruzgarkartali@ruzgarkartali-HP-Laptop:~/Documents/TFE/fabric-samples/test-networm$ 

